#ifndef LLTABLE_H
#define LLTABLE_H

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdbool.h>
#include <ctype.h>

enum Terminal {
    T_CONST,
    T_IFJ,
    T_EQUAL,
    T_AT_IMPORT,
    T_LEFT_PARENTHESIS,
    T_RIGHT_PARENTHESIS,
    T_SEMICOLON,
    T_PUB,
    T_FN,
    T_ID,
    T_COLON,
    T_COMMA,
    T_VOID,
    T_INT,
    T_INT_OR_NULL,
    T_FLOAT,
    T_FLOAT_OR_NULL,
    T_STRING,
    T_STRING_OR_NULL,
    T_VAR,
    T_IF,
    T_ELSE,
    T_PIPE,
    T_LEFT_CURLY_BRACKET,
    T_RIGHT_CURLY_BRACKET,
    T_WHILE,
    T_RETURN,
    T_DOUBLE_EQUAL,
    T_NOT_EQUAL,
    T_LESS_THAN,
    T_GREATER_THAN,
    T_LESS_THAN_OR_EQUAL,
    T_GREATER_THAN_OR_EQUAL,
    T_PLUS,
    T_MINUS,
    T_MULTIPLY,
    T_DIVIDE,
    T_DOT,
    T_INT_LITERAL,
    T_FLOAT_LITERAL,
    T_STRING_LITERAL,
    T_NULL_LITERAL,
    T_EOF,
    T_EPSILON,
    TERMINAL_COUNT,  // Number of terminals
    
};

#define NON_TERIMINAL_COUNT 40

size_t symtable_hashFunction(char *key) {
    size_t hash = 5381;
    for(char *i = key; *i; i++) {
        hash = ((hash << 5) + hash) + *i;
    }
    return hash;
}



typedef struct col {
    size_t key;
    int value[NON_TERIMINAL_COUNT];
} col_t;


col_t table[TERMINAL_COUNT] = {
	{5862297ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}},
	{5862386ULL, {-1, -1, -1, -1, 5, 7, 10, 8, -1, -1, 19, 22, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 42, 43, -1, -1, 52, -1, -1, 57, -1, -1, 62, -1, 68, 70, -1, -1}},
	{5862388ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 19, 23, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}},
	{193453740ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}},
	{193454815ULL, {-1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}},
	{193458878ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 33, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 42, 43, -1, -1, 52, -1, -1, 57, -1, -1, 63, -1, 68, 70, -1, -1}},
	{193459152ULL, {-1, -1, -1, -1, -1, -1, -1, -1, 11, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}},
	{193466988ULL, {-1, -1, 2, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}},
	{193472878ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 19, 21, -1, 26, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}},
	{6384006126ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}},
	{6384398067ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 35, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}},
	{6384401513ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 53, 55, -1, 59, -1, -1, 67, -1, -1, -1, -1}},
	{6384619991ULL, {-1, -1, -1, -1, -1, -1, -1, -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}},
	{210669930912ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 29, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}},
	{210669931922ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, -1, -1, 54, -1, -1, 59, -1, -1, 67, -1, -1, 71, -1}},
	{210669933228ULL, {0, 1, -1, -1, -1, -1, -1, -1, -1, -1, 19, 21, -1, 26, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}},
	{210672383965ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 31, -1, -1, 30, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}},
	{210673383675ULL, {-1, -1, -1, -1, -1, -1, -1, -1, 11, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}},
	{210681576881ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 53, 56, -1, 59, -1, -1, 67, -1, -1, -1, -1}},
	{210693394398ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 19, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}},
	{6952140092538ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 58, 61, -1, 67, -1, -1, -1, -1}},
	{6952683186021ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 19, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 39, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}},
	{6952740025148ULL, {-1, -1, -1, -1, -1, -1, -1, -1, 11, 17, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}},
	{229422184920831ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}},
	{7571279246261765ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 58, 60, -1, 67, -1, -1, -1, -1}},
	{249835319716925268ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}},
	{249850135850301702ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 44, 48, -1, 54, -1, -1, 59, -1, -1, 67, -1, -1, -1, -1}},
	{249853376582133037ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 44, 47, -1, 54, -1, -1, 59, -1, -1, 67, -1, -1, -1, -1}},
	{249859972537086990ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, -1, -1, 45, -1, -1, 54, -1, -1, 59, -1, -1, 67, -1, -1, -1, -1}},
	{1259126739841280167ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 42, 43, -1, -1, 52, -1, -1, 57, -1, -1, 64, -1, 68, 70, -1, 74}},
	{1259126744081274805ULL, {-1, -1, -1, -1, -1, -1, -1, -1, 11, 16, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}},
	{7284415067109582773ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 32, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 42, 43, -1, -1, 52, -1, -1, 57, -1, -1, 65, 66, 68, 70, -1, -1}},
	{9421056868997489328ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 44, 51, -1, 54, -1, -1, 59, -1, -1, 67, -1, -1, -1, -1}},
	{12551658098835327432ULL, {-1, -1, -1, -1, 6, -1, -1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, -1, -1, 54, -1, -1, 59, -1, -1, 67, 69, -1, 72, -1}},
	{13357759252997927383ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 44, 46, -1, 54, -1, -1, 59, -1, -1, 67, -1, -1, -1, -1}},
	{13513236659805563001ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 44, 49, -1, 54, -1, -1, 59, -1, -1, 67, -1, -1, -1, -1}},
	{13828205768324589692ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 42, 43, -1, -1, 52, -1, -1, 57, -1, -1, 64, -1, 68, 70, -1, 73}},
	{13828205772564584330ULL, {-1, -1, -1, -1, -1, -1, -1, -1, 11, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}},
	{13871966970720415084ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 42, 43, -1, -1, 52, -1, -1, 57, -1, -1, 64, -1, 68, 70, -1, 76}},
	{14265960969046774760ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 42, 43, -1, -1, 52, -1, -1, 57, -1, -1, 64, -1, 68, 70, -1, 75}},
	{14265960973286769398ULL, {-1, -1, -1, -1, -1, -1, -1, -1, 11, 18, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}},
	{14898862961759019485ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 44, 50, -1, 54, -1, -1, 59, -1, -1, 67, -1, -1, -1, -1}},
	{15940418408625531884ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}},
	{16850163782960150809ULL, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, 37, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}}
};


int find(int nt, char *str) {
    size_t hash = symtable_hashFunction(str);
    int left = 0;
    int right = TERMINAL_COUNT - 1;
    int mid;
    while(left <= right) {
        mid = (left + right) / 2;
        if(table[mid].key == hash) {
            return table[mid].value[nt];
        }
        if(table[mid].key < hash) {
            left = mid + 1;
        } else {
            right = mid - 1;
        }
    }
    // Něco je hodně špatně - terminál není v tabulce
    return -2;
}

#endif // LLTABLE_H