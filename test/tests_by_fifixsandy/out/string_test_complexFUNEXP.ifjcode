.IFJcode24
DEFVAR GF@?tempDEST
DEFVAR GF@?tempSRC1
DEFVAR GF@?tempSRC2
CREATEFRAME
CALL $$main
JUMP $$end$$

        #---------------------------------------------------
        #pub fn ifj.substring(s: []u8, i: i32, j: i32) ?[]u8
        LABEL $$ifj$substring
        PUSHFRAME
        
            LT GF@$?tempDEST LF@i int@0
            JUMPIFEQ $$$null GF@$tempDEST bool@true
            
            LT GF@$?tempDEST LF@j int@0
            JUMPIFEQ $$$null GF@$tempDEST bool@true
            
            GT GF@$?tempDEST LF@i LF@j
            JUMPIFEQ $$$null GF@$?tempDEST bool@true
            
            STRLEN GF@?tempSRC1 LF@s
            
            GT GF@$?tempDEST LF@i GF@?tempSRC1
            JUMPIFEQ $$$null GF@$?tempDEST bool@true
            EQ GF@$?tempDEST LF@i GF@?tempSRC1
            JUMPIFEQ $$$null GF@$?tempDEST bool@true
            
            GT GF@$?tempDEST LF@j GF@?tempSRC1
            JUMPIFEQ $$$null GF@$?tempDEST bool@true
        
        LABEL $$$while
        
            JUMPIFEQ $$$sub_end TF@i TF@j
            
            GETCHAR GF@?tempSRC1 LF@s LF@i
            CONCAT GF@?tempDEST GF@?tempDEST GF@?tempSRC1
            ADD LF@i LF@i int@1
            JUMP $$$while
            
            PUSHS GF@?tempDEST
            JUMP &&&sub_end
        
        LABEL $$$null
            PUSHS nil@nil
        
        LABEL $$$sub_end
        
        POPFRAME
        RETURN
        
        
        
    #-----------------------------------------
    #pub fn ifj.strcmp(ùë†1: []u8, s2: []u8) i32
        LABEL $$ifj$strcmp
        PUSHFRAME
        
        STRLEN GF@?tempSRC1 LF@s1
        STRLEN GF@?tempSRC2 LF@s2
        LT GF@?tempDEST GF@?tempSRC1 GF@?tempSRC2
        JUMPIFEQ $$$strcmp-1 GF@?tempDEST bool@true
        GT GF@?tempDEST GF@?tempSRC1 GF@?tempSRC2
        JUMPIFEQ $$$strcmp1 GF@?tempDEST bool@true
        
        DEFVAR LF@len
        MOVE LF@len GF@?tempSRC1
        DEFVAR LF@i
        MOVE LF@i int@0
        LABEL $$$cmp_while
        
            JUMPIFEQ $$$strcmp0 LF@i LF@len
            GETCHAR GF@?tempSRC1 LF@s1 LF@i
            GETCHAR GF@?tempSRC2 LF@s2 LF@i
            
            LT GF@?tempDEST GF@?tempSRC1 GF@?tempSRC2
            JUMPIFEQ $$$strcmp-1 GF@?tempDEST bool@true
            
            GT GF@?tempDEST GF@?tempSRC1 GF@?tempSRC2
            JUMPIFEQ $$$strcmp1 GF@?tempDEST bool@true
            
            ADD LF@i LF@i int@1
        
        JUMP $$$cmp_while
        
        LABEL $$$strcmp-1
            PUSHS int@-1
            JUMP $$$cmp_end
        
        LABEL $$$strcmp1
            PUSHS int@1
            JUMP $$$cmp_end
        
        LABEL $$$strcmp0
            PUSHS int@0
            JUMP $$$cmp_end
        
        LABEL $$$cmp_end
        
        POPFRAME
        RETURN
        
        
        
LABEL $$factorial
PUSHFRAME
DEFVAR LF@result$1$ 
PUSHS int@1 
POPS LF@result$1$ 
DEFVAR LF@counter$1$ 
PUSHS LF@n$1$
POPS LF@counter$1$ 
# Definice vsech promennych v tele while
LABEL while_start$0
PUSHS LF@counter$1$
PUSHS int@1 
GTS
# while_body_0
PUSHS bool@true
JUMPIFNEQS while_end$0
PUSHS LF@result$1$
PUSHS LF@counter$1$
MULS
POPS LF@result$1$
PUSHS LF@counter$1$
PUSHS int@1 
SUBS
POPS LF@counter$1$
JUMP while_start$0
LABEL while_end$0
PUSHS LF@result$1$
POPFRAME
RETURN
POPFRAME
RETURN

LABEL $$countOccurrences
PUSHFRAME
DEFVAR LF@len$3$ 
PUSHS LF@s$3$
POPS GF@?tempSRC1
STRLEN GF@?tempDEST GF@?tempSRC1
PUSHS GF@?tempDEST
POPS LF@len$3$ 
DEFVAR LF@count$3$ 
PUSHS int@0 
POPS LF@count$3$ 
DEFVAR LF@i$3$ 
PUSHS int@0 
POPS LF@i$3$ 
# Definice vsech promennych v tele while
DEFVAR LF@charSlice$4$ 
DEFVAR LF@charSlice1$4$ 
DEFVAR LF@a$5$
LABEL while_start$1
PUSHS LF@i$3$
PUSHS LF@len$3$
LTS
# while_body_1
PUSHS bool@true
JUMPIFNEQS while_end$1
CREATEFRAME

#fun: substring, arg: 0
PUSHS LF@s$3$
DEFVAR TF@s
POPS TF@s

#fun: substring, arg: 1
PUSHS LF@i$3$
DEFVAR TF@i
POPS TF@i

#fun: substring, arg: 2
PUSHS LF@i$3$
PUSHS int@1 
ADDS
DEFVAR TF@j
POPS TF@j
CALL $$ifj$substring
POPS LF@charSlice$4$ 
PUSHS string@ 
POPS LF@charSlice1$4$ 
# if_2
PUSHS LF@charSlice$4$
# THEN_2
POPS GF@?tempSRC1
JUMPIFEQ if_else$2 GF@?tempSRC1 nil@nil
MOVE LF@a$5$ GF@?tempSRC1
PUSHS LF@a$5$
POPS LF@charSlice1$4$
JUMP if_end$2
LABEL if_else$2
PUSHS string@ERROR\010 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS int@0 
POPFRAME
RETURN
LABEL if_end$2
# if_3
CREATEFRAME

#fun: strcmp, arg: 0
PUSHS LF@charSlice1$4$
DEFVAR TF@s1
POPS TF@s1

#fun: strcmp, arg: 1
PUSHS LF@targetChar$3$
DEFVAR TF@s2
POPS TF@s2
CALL $$ifj$strcmp
PUSHS int@0 
EQS
# THEN_3
PUSHS bool@true
JUMPIFNEQS if_else$3
PUSHS LF@count$3$
PUSHS int@1 
ADDS
POPS LF@count$3$
JUMP if_end$3
LABEL if_else$3
LABEL if_end$3
PUSHS LF@i$3$
PUSHS int@1 
ADDS
POPS LF@i$3$
JUMP while_start$1
LABEL while_end$1
PUSHS LF@count$3$
POPFRAME
RETURN
POPFRAME
RETURN

LABEL $$complexStringManipulation
PUSHFRAME
DEFVAR LF@len$9$ 
PUSHS LF@input$9$
POPS GF@?tempSRC1
STRLEN GF@?tempDEST GF@?tempSRC1
PUSHS GF@?tempDEST
POPS LF@len$9$ 
DEFVAR LF@output$9$ 
PUSHS string@ 
POPS LF@output$9$ 
# if_4
PUSHS LF@len$9$
PUSHS int@10 
GTS
# THEN_4
PUSHS bool@true
JUMPIFNEQS if_else$4
DEFVAR LF@reversed$10$ 
CREATEFRAME

#fun: reverseString, arg: 0
PUSHS LF@input$9$
DEFVAR TF@s$12$
POPS TF@s$12$
CALL $$reverseString
POPS LF@reversed$10$ 
PUSHS string@Reversed\058\032 
POPS GF@?tempSRC1
PUSHS LF@reversed$10$
POPS GF@?tempSRC2
CONCAT GF@?tempDEST GF@?tempSRC1 GF@?tempSRC2
PUSHS GF@?tempDEST
POPS LF@output$9$
JUMP if_end$4
LABEL if_else$4
PUSHS string@Original\058\032 
POPS GF@?tempSRC1
PUSHS LF@input$9$
POPS GF@?tempSRC2
CONCAT GF@?tempDEST GF@?tempSRC1 GF@?tempSRC2
PUSHS GF@?tempDEST
POPS LF@output$9$
LABEL if_end$4
PUSHS LF@output$9$
POPFRAME
RETURN
POPFRAME
RETURN

LABEL $$reverseString
PUSHFRAME
DEFVAR LF@len$12$ 
PUSHS LF@s$12$
POPS GF@?tempSRC1
STRLEN GF@?tempDEST GF@?tempSRC1
PUSHS GF@?tempDEST
POPS LF@len$12$ 
DEFVAR LF@reversed$12$ 
PUSHS string@ 
POPS LF@reversed$12$ 
DEFVAR LF@i$12$ 
PUSHS LF@len$12$
PUSHS int@1 
SUBS
POPS LF@i$12$ 
# Definice vsech promennych v tele while
DEFVAR LF@charSlice$13$ 
DEFVAR LF@charSlice1$13$ 
DEFVAR LF@a$14$
LABEL while_start$2
PUSHS LF@i$12$
PUSHS int@0 
LTS
NOTS
# while_body_2
PUSHS bool@true
JUMPIFNEQS while_end$2
CREATEFRAME

#fun: substring, arg: 0
PUSHS LF@s$12$
DEFVAR TF@s
POPS TF@s

#fun: substring, arg: 1
PUSHS LF@i$12$
DEFVAR TF@i
POPS TF@i

#fun: substring, arg: 2
PUSHS LF@i$12$
PUSHS int@1 
ADDS
DEFVAR TF@j
POPS TF@j
CALL $$ifj$substring
POPS LF@charSlice$13$ 
PUSHS string@ 
POPS LF@charSlice1$13$ 
# if_6
PUSHS LF@charSlice$13$
# THEN_6
POPS GF@?tempSRC1
JUMPIFEQ if_else$6 GF@?tempSRC1 nil@nil
MOVE LF@a$14$ GF@?tempSRC1
PUSHS LF@a$14$
POPS LF@charSlice1$13$
JUMP if_end$6
LABEL if_else$6
PUSHS string@ERROR\010 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS string@ERROR\010 
POPFRAME
RETURN
LABEL if_end$6
PUSHS LF@reversed$12$
POPS GF@?tempSRC1
PUSHS LF@charSlice1$13$
POPS GF@?tempSRC2
CONCAT GF@?tempDEST GF@?tempSRC1 GF@?tempSRC2
PUSHS GF@?tempDEST
POPS LF@reversed$12$
PUSHS LF@i$12$
PUSHS int@1 
SUBS
POPS LF@i$12$
JUMP while_start$2
LABEL while_end$2
PUSHS LF@reversed$12$
POPFRAME
RETURN
POPFRAME
RETURN

LABEL $$mainLogic
PUSHFRAME
DEFVAR LF@inputStr$16$ 
PUSHS string@Helloo\044\032Zig\032World\033 
POPS LF@inputStr$16$ 
DEFVAR LF@charToFind$16$ 
PUSHS string@o 
POPS LF@charToFind$16$ 
DEFVAR LF@occurrences$16$ 
CREATEFRAME

#fun: countOccurrences, arg: 0
PUSHS LF@inputStr$16$
DEFVAR TF@s$3$
POPS TF@s$3$

#fun: countOccurrences, arg: 1
PUSHS LF@charToFind$16$
DEFVAR TF@targetChar$3$
POPS TF@targetChar$3$
CALL $$countOccurrences
POPS LF@occurrences$16$ 
# if_7
PUSHS LF@occurrences$16$
PUSHS int@0 
GTS
# THEN_7
PUSHS bool@true
JUMPIFNEQS if_else$7
DEFVAR LF@output$17$ 
PUSHS string@Occurrences\032of\032\039o\039\058\032 
POPS GF@?tempSRC1
PUSHS string@should\032be\032\058\032\051\010 
POPS GF@?tempSRC1
PUSHS string@Calculated\058\032 
POPS GF@?tempSRC2
CONCAT GF@?tempDEST GF@?tempSRC1 GF@?tempSRC2
PUSHS GF@?tempDEST
POPS GF@?tempSRC2
CONCAT GF@?tempDEST GF@?tempSRC1 GF@?tempSRC2
PUSHS GF@?tempDEST
POPS LF@output$17$ 
PUSHS LF@output$17$
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS LF@occurrences$16$
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS string@\010 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
JUMP if_end$7
LABEL if_else$7
PUSHS string@No\032occurrences\032found\046 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
LABEL if_end$7
DEFVAR LF@factorialResult$16$ 
CREATEFRAME

#fun: factorial, arg: 0
PUSHS int@5 
DEFVAR TF@n$1$
POPS TF@n$1$
CALL $$factorial
POPS LF@factorialResult$16$ 
PUSHS string@Factorial\032of\032\053\058\032 
POPS GF@?tempSRC1
PUSHS string@\049\050\048 
POPS GF@?tempSRC1
PUSHS string@\044\032calculated\058\032 
POPS GF@?tempSRC2
CONCAT GF@?tempDEST GF@?tempSRC1 GF@?tempSRC2
PUSHS GF@?tempDEST
POPS GF@?tempSRC2
CONCAT GF@?tempDEST GF@?tempSRC1 GF@?tempSRC2
PUSHS GF@?tempDEST
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS LF@factorialResult$16$
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS string@\010 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
DEFVAR LF@manipulatedStr$16$ 
CREATEFRAME

#fun: complexStringManipulation, arg: 0
PUSHS LF@inputStr$16$
DEFVAR TF@input$9$
POPS TF@input$9$
CALL $$complexStringManipulation
POPS LF@manipulatedStr$16$ 
PUSHS LF@manipulatedStr$16$
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
POPFRAME
RETURN

LABEL $$main
PUSHFRAME
CREATEFRAME
CALL $$mainLogic
PUSHS string@\010 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
POPFRAME
RETURN

LABEL $$end$$

