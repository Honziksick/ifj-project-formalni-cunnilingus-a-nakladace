.IFJcode24
DEFVAR GF@?tempDEST
DEFVAR GF@?tempSRC1
DEFVAR GF@?tempSRC2
CREATEFRAME
CALL $$main
JUMP $$end$$

        #---------------------------------------------------
        #pub fn ifj.substring(s: []u8, i: i32, j: i32) ?[]u8
        LABEL $$ifj$substring
        PUSHFRAME
        
            LT GF@?tempDEST LF@i int@0
            JUMPIFEQ $$$null GF@?tempDEST bool@true
            
            LT GF@?tempDEST LF@j int@0
            JUMPIFEQ $$$null GF@?tempDEST bool@true
            
            GT GF@?tempDEST LF@i LF@j
            JUMPIFEQ $$$null GF@?tempDEST bool@true
            
            STRLEN GF@?tempSRC1 LF@s
            
            GT GF@?tempDEST LF@i GF@?tempSRC1
            JUMPIFEQ $$$null GF@?tempDEST bool@true
            EQ GF@?tempDEST LF@i GF@?tempSRC1
            JUMPIFEQ $$$null GF@?tempDEST bool@true
            
            GT GF@?tempDEST LF@j GF@?tempSRC1
            JUMPIFEQ $$$null GF@?tempDEST bool@true
        
        PUSHS string@ 
        POPS GF@?tempDEST 
        
        LABEL $$$while
        
            JUMPIFEQ $$$substring_success LF@i LF@j
            
            GETCHAR GF@?tempSRC1 LF@s LF@i
            CONCAT GF@?tempDEST GF@?tempDEST GF@?tempSRC1
            ADD LF@i LF@i int@1
            JUMP $$$while
        
        LABEL $$$null
            PUSHS nil@nil
            JUMP $$$substring_end
        
        LABEL $$$substring_success
            PUSHS GF@?tempDEST
        
        LABEL $$$substring_end
        
        POPFRAME
        RETURN
        
        
        
    #-----------------------------------------
    #pub fn ifj.strcmp(s1: []u8, s2: []u8) i32
        LABEL $$ifj$strcmp
        PUSHFRAME
        
        STRLEN GF@?tempSRC1 LF@s1
        STRLEN GF@?tempSRC2 LF@s2
        DEFVAR LF@len
        MOVE LF@len GF@?tempSRC1
        
        LT GF@?tempDEST GF@?tempSRC1 GF@?tempSRC2
        JUMPIFEQ $$$cmp_def GF@?tempDEST bool@true
        
        MOVE LF@len GF@?tempSRC2
        
        LABEL $$$cmp_def
        DEFVAR LF@i
        MOVE LF@i int@0
        LABEL $$$cmp_while
        
            JUMPIFEQ $$$strcmp0 LF@i LF@len
            GETCHAR GF@?tempSRC1 LF@s1 LF@i
            GETCHAR GF@?tempSRC2 LF@s2 LF@i
            
            LT GF@?tempDEST GF@?tempSRC1 GF@?tempSRC2
            JUMPIFEQ $$$strcmp-1 GF@?tempDEST bool@true
            
            GT GF@?tempDEST GF@?tempSRC1 GF@?tempSRC2
            JUMPIFEQ $$$strcmp1 GF@?tempDEST bool@true
            
            ADD LF@i LF@i int@1
        
        JUMP $$$cmp_while
        
        LABEL $$$strcmp-1
            PUSHS int@-1
            JUMP $$$cmp_end
        
        LABEL $$$strcmp1
            PUSHS int@1
            JUMP $$$cmp_end
        
        LABEL $$$strcmp0
            PUSHS int@0
            JUMP $$$cmp_end
        
        LABEL $$$cmp_end
        
        POPFRAME
        RETURN
        
        
        
    #-----------------------------------------
    #pub fn ifj.ord(s: []u8, i: i32) i32
        LABEL $$ifj$ord
        PUSHFRAME
        
        STRLEN GF@?tempSRC1 LF@s
        EQ GF@?tempDEST GF@?tempSRC1 int@0
        JUMPIFEQ $$$ord_zero GF@?tempDEST bool@true
        
        LT GF@?tempDEST LF@i int@0
        JUMPIFEQ $$$ord_zero GF@?tempDEST bool@true
        EQ GF@?tempDEST LF@i GF@?tempSRC1
        JUMPIFEQ $$$ord_zero GF@?tempDEST bool@true
        GT GF@?tempDEST LF@i GF@?tempSRC1
        JUMPIFEQ $$$ord_zero GF@?tempDEST bool@true
        
        STRI2INT GF@?tempDEST LF@s LF@i
        PUSHS GF@?tempDEST
        JUMP $$$ord_end
        
        # Vrácení hodnoty 0
        LABEL $$$ord_zero
        PUSHS int@0
        
        LABEL $$$ord_end
        POPFRAME
        RETURN
        
        
        
LABEL $$main
PUSHFRAME
DEFVAR LF@a$1$ 
READ GF@?tempSRC1 string
PUSHS GF@?tempSRC1
POPS LF@a$1$ 
DEFVAR LF@a_without_null$1$ 
PUSHS string@ 
POPS LF@a_without_null$1$ 
# if_0
PUSHS LF@a$1$
# then_0
POPS GF@?tempSRC1
JUMPIFEQ if_else$0 GF@?tempSRC1 nil@nil
DEFVAR LF@b$2$
MOVE LF@b$2$ GF@?tempSRC1
PUSHS LF@b$2$
POPS LF@a_without_null$1$
JUMP if_end$0
LABEL if_else$0
LABEL if_end$0
PUSHS LF@a$1$
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS string@\010 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
DEFVAR LF@str_after$1$ 
PUSHS string@\045\045after 
POPS LF@str_after$1$ 
DEFVAR LF@str_before$1$ 
PUSHS string@before\045\045 
POPS LF@str_before$1$ 
DEFVAR LF@len_after$1$ 
PUSHS LF@str_after$1$
POPS GF@?tempSRC1
STRLEN GF@?tempDEST GF@?tempSRC1
PUSHS GF@?tempDEST
POPS LF@len_after$1$ 
PUSHS string@Sring\032and\032length\058\032 
PUSHS LF@str_after$1$
POPS GF@?tempSRC2
POPS GF@?tempSRC1
CONCAT GF@?tempDEST GF@?tempSRC1 GF@?tempSRC2
PUSHS GF@?tempDEST
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS LF@len_after$1$
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS string@\010 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
DEFVAR LF@cc$1$ 
PUSHS LF@str_before$1$
PUSHS LF@a_without_null$1$
POPS GF@?tempSRC2
POPS GF@?tempSRC1
CONCAT GF@?tempDEST GF@?tempSRC1 GF@?tempSRC2
PUSHS GF@?tempDEST
PUSHS LF@str_after$1$
POPS GF@?tempSRC2
POPS GF@?tempSRC1
CONCAT GF@?tempDEST GF@?tempSRC1 GF@?tempSRC2
PUSHS GF@?tempDEST
POPS LF@cc$1$ 
PUSHS LF@cc$1$
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS string@\010 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS string@ 
PUSHS string@ 
POPS GF@?tempSRC2
POPS GF@?tempSRC1
CONCAT GF@?tempDEST GF@?tempSRC1 GF@?tempSRC2
PUSHS GF@?tempDEST
POPS LF@cc$1$
PUSHS LF@cc$1$
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS LF@cc$1$
POPS GF@?tempSRC1
STRLEN GF@?tempDEST GF@?tempSRC1
PUSHS GF@?tempDEST
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS string@\010 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
DEFVAR LF@test$1$ 
PUSHS string@abcdef 
POPS LF@test$1$ 
DEFVAR LF@sub$1$ 
CREATEFRAME
PUSHS LF@test$1$
DEFVAR TF@s
POPS TF@s
PUSHS int@1 
DEFVAR TF@i
POPS TF@i
PUSHS int@3 
DEFVAR TF@j
POPS TF@j
CALL $$ifj$substring
POPS LF@sub$1$ 
# if_1
PUSHS LF@sub$1$
# then_1
POPS GF@?tempSRC1
JUMPIFEQ if_else$1 GF@?tempSRC1 nil@nil
DEFVAR LF@sub_without_null$4$
MOVE LF@sub_without_null$4$ GF@?tempSRC1
PUSHS LF@sub_without_null$4$
PUSHS string@\010 
POPS GF@?tempSRC2
POPS GF@?tempSRC1
CONCAT GF@?tempDEST GF@?tempSRC1 GF@?tempSRC2
PUSHS GF@?tempDEST
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
JUMP if_end$1
LABEL if_else$1
LABEL if_end$1
PUSHS string@abeceda\058\032 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
DEFVAR LF@i$1$ 
PUSHS int@65 
POPS LF@i$1$ 
# Definice vsech promennych v tele while
DEFVAR LF@j$6$ 
LABEL while_start$0
PUSHS int@90 
PUSHS LF@i$1$
LTS
NOTS
# while_body_0
PUSHS bool@true
JUMPIFNEQS while_end$0
PUSHS LF@i$1$
POPS LF@j$6$ 
PUSHS LF@j$6$
INT2CHARS
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS LF@i$1$
PUSHS int@1 
ADDS
POPS LF@i$1$
JUMP while_start$0
LABEL while_end$0
PUSHS string@\010 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
DEFVAR LF@a_len$1$ 
PUSHS LF@a_without_null$1$
POPS GF@?tempSRC1
STRLEN GF@?tempDEST GF@?tempSRC1
PUSHS GF@?tempDEST
POPS LF@a_len$1$ 
DEFVAR LF@j$1$ 
PUSHS int@0 
POPS LF@j$1$ 
# Definice vsech promennych v tele while
LABEL while_start$1
PUSHS LF@a_len$1$
PUSHS LF@j$1$
GTS
# while_body_1
PUSHS bool@true
JUMPIFNEQS while_end$1
CREATEFRAME
PUSHS LF@a_without_null$1$
DEFVAR TF@s
POPS TF@s
PUSHS LF@j$1$
DEFVAR TF@i
POPS TF@i
CALL $$ifj$ord
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS string@\010 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS LF@j$1$
PUSHS int@1 
ADDS
POPS LF@j$1$
JUMP while_start$1
LABEL while_end$1
POPFRAME
RETURN

LABEL $$end$$

