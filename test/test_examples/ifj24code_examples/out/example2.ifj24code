.IFJcode24
DEFVAR GF@?tempDEST
DEFVAR GF@?tempSRC1
DEFVAR GF@?tempSRC2
CREATEFRAME
CALL $$main
JUMP $$end$$

        #---------------------------------------------------
        #pub fn ifj.substring(s: []u8, i: i32, j: i32) ?[]u8
        LABEL $$ifj$substring
        PUSHFRAME
        
            LT GF@?tempDEST LF@i int@0
            JUMPIFEQ $$$null GF@?tempDEST bool@true
            
            LT GF@?tempDEST LF@j int@0
            JUMPIFEQ $$$null GF@?tempDEST bool@true
            
            GT GF@?tempDEST LF@i LF@j
            JUMPIFEQ $$$null GF@?tempDEST bool@true
            
            STRLEN GF@?tempSRC1 LF@s
            
            GT GF@?tempDEST LF@i GF@?tempSRC1
            JUMPIFEQ $$$null GF@?tempDEST bool@true
            EQ GF@?tempDEST LF@i GF@?tempSRC1
            JUMPIFEQ $$$null GF@?tempDEST bool@true
            
            GT GF@?tempDEST LF@j GF@?tempSRC1
            JUMPIFEQ $$$null GF@?tempDEST bool@true
        
        PUSHS string@ 
        POPS GF@?tempDEST 
        
        LABEL $$$while
        
            JUMPIFEQ $$$substring_success LF@i LF@j
            
            GETCHAR GF@?tempSRC1 LF@s LF@i
            CONCAT GF@?tempDEST GF@?tempDEST GF@?tempSRC1
            ADD LF@i LF@i int@1
            JUMP $$$while
        
        LABEL $$$null
            PUSHS nil@nil
            JUMP $$$substring_end
        
        LABEL $$$substring_success
            PUSHS GF@?tempDEST
        
        LABEL $$$substring_end
        
        POPFRAME
        RETURN
        
        
        
    #-----------------------------------------
    #pub fn ifj.strcmp(s1: []u8, s2: []u8) i32
        LABEL $$ifj$strcmp
        PUSHFRAME
        
        STRLEN GF@?tempSRC1 LF@s1
        STRLEN GF@?tempSRC2 LF@s2
        DEFVAR LF@len
        MOVE LF@len GF@?tempSRC1
        
        LT GF@?tempDEST GF@?tempSRC1 GF@?tempSRC2
        JUMPIFEQ $$$cmp_def GF@?tempDEST bool@true
        
        MOVE LF@len GF@?tempSRC2
        
        LABEL $$$cmp_def
        DEFVAR LF@i
        MOVE LF@i int@0
        LABEL $$$cmp_while
        
            JUMPIFEQ $$$strcmp0 LF@i LF@len
            GETCHAR GF@?tempSRC1 LF@s1 LF@i
            GETCHAR GF@?tempSRC2 LF@s2 LF@i
            
            LT GF@?tempDEST GF@?tempSRC1 GF@?tempSRC2
            JUMPIFEQ $$$strcmp-1 GF@?tempDEST bool@true
            
            GT GF@?tempDEST GF@?tempSRC1 GF@?tempSRC2
            JUMPIFEQ $$$strcmp1 GF@?tempDEST bool@true
            
            ADD LF@i LF@i int@1
        
        JUMP $$$cmp_while
        
        LABEL $$$strcmp-1
            PUSHS int@-1
            JUMP $$$cmp_end
        
        LABEL $$$strcmp1
            PUSHS int@1
            JUMP $$$cmp_end
        
        LABEL $$$strcmp0
            PUSHS int@0
            JUMP $$$cmp_end
        
        LABEL $$$cmp_end
        
        POPFRAME
        RETURN
        
        
        
    #-----------------------------------------
    #pub fn ifj.ord(s: []u8, i: i32) i32
        LABEL $$ifj$ord
        PUSHFRAME
        
        STRLEN GF@?tempSRC1 LF@s
        EQ GF@?tempDEST GF@?tempSRC1 int@0
        JUMPIFEQ $$$ord_zero GF@?tempDEST bool@true
        
        LT GF@?tempDEST LF@i int@0
        JUMPIFEQ $$$ord_zero GF@?tempDEST bool@true
        EQ GF@?tempDEST LF@i GF@?tempSRC1
        JUMPIFEQ $$$ord_zero GF@?tempDEST bool@true
        GT GF@?tempDEST LF@i GF@?tempSRC1
        JUMPIFEQ $$$ord_zero GF@?tempDEST bool@true
        
        STRI2INT GF@?tempDEST LF@s LF@i
        PUSHS GF@?tempDEST
        JUMP $$$ord_end
        
        # Vrácení hodnoty 0
        LABEL $$$ord_zero
        PUSHS int@0
        
        LABEL $$$ord_end
        POPFRAME
        RETURN
        
        
        
LABEL $$main
PUSHFRAME
PUSHS string@Zadejte\032cislo\032pro\032vypocet\032faktorialu\058\032 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
DEFVAR LF@inp$1$ 
READ GF@?tempSRC1 int
PUSHS GF@?tempSRC1
POPS LF@inp$1$ 
# if_0
PUSHS LF@inp$1$
# then_0
POPS GF@?tempSRC1
JUMPIFEQ if_else$0 GF@?tempSRC1 nil@nil
DEFVAR LF@INP$2$
MOVE LF@INP$2$ GF@?tempSRC1
# if_1
PUSHS LF@INP$2$
PUSHS int@0 
LTS
# then_1
PUSHS bool@true
JUMPIFNEQS if_else$1
PUSHS string@Faktorial\032nelze\032spocitat\033\010 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
JUMP if_end$1
LABEL if_else$1
DEFVAR LF@vysl$4$ 
CREATEFRAME
PUSHS LF@INP$2$
DEFVAR TF@n$7$
POPS TF@n$7$
CALL $$factorial
POPS LF@vysl$4$ 
PUSHS string@Vysledek\058\032 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS LF@vysl$4$
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
LABEL if_end$1
JUMP if_end$0
LABEL if_else$0
PUSHS string@Chyba\032pri\032nacitani\032celeho\032cisla\033\010 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
LABEL if_end$0
POPFRAME
RETURN

LABEL $$decrement
PUSHFRAME
PUSHS LF@n$6$
PUSHS LF@m$6$
SUBS
POPFRAME
RETURN

LABEL $$factorial
PUSHFRAME
DEFVAR LF@result$7$ 
PUSHS int@-1 
POPS LF@result$7$ 
# if_2
PUSHS LF@n$7$
PUSHS int@2 
LTS
# then_2
PUSHS bool@true
JUMPIFNEQS if_else$2
PUSHS int@1 
POPS LF@result$7$
JUMP if_end$2
LABEL if_else$2
DEFVAR LF@decremented_n$9$ 
CREATEFRAME
PUSHS LF@n$7$
DEFVAR TF@n$6$
POPS TF@n$6$
PUSHS int@1 
DEFVAR TF@m$6$
POPS TF@m$6$
CALL $$decrement
POPS LF@decremented_n$9$ 
DEFVAR LF@temp_result$9$ 
CREATEFRAME
PUSHS LF@decremented_n$9$
DEFVAR TF@n$7$
POPS TF@n$7$
CALL $$factorial
POPS LF@temp_result$9$ 
PUSHS LF@n$7$
PUSHS LF@temp_result$9$
MULS
POPS LF@result$7$
LABEL if_end$2
PUSHS LF@result$7$
POPFRAME
RETURN

LABEL $$end$$

