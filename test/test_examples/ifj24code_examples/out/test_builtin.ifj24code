.IFJcode24
DEFVAR GF@?tempDEST
DEFVAR GF@?tempSRC1
DEFVAR GF@?tempSRC2
CREATEFRAME
CALL $$main
JUMP $$end$$

        #---------------------------------------------------
        #pub fn ifj.substring(s: []u8, i: i32, j: i32) ?[]u8
        LABEL $$ifj$substring
        PUSHFRAME
        
            LT GF@?tempDEST LF@i int@0
            JUMPIFEQ $$$null GF@?tempDEST bool@true
            
            LT GF@?tempDEST LF@j int@0
            JUMPIFEQ $$$null GF@?tempDEST bool@true
            
            GT GF@?tempDEST LF@i LF@j
            JUMPIFEQ $$$null GF@?tempDEST bool@true
            
            STRLEN GF@?tempSRC1 LF@s
            
            GT GF@?tempDEST LF@i GF@?tempSRC1
            JUMPIFEQ $$$null GF@?tempDEST bool@true
            EQ GF@?tempDEST LF@i GF@?tempSRC1
            JUMPIFEQ $$$null GF@?tempDEST bool@true
            
            GT GF@?tempDEST LF@j GF@?tempSRC1
            JUMPIFEQ $$$null GF@?tempDEST bool@true
        
        PUSHS string@ 
        POPS GF@?tempDEST 
        
        LABEL $$$while
        
            JUMPIFEQ $$$substring_success LF@i LF@j
            
            GETCHAR GF@?tempSRC1 LF@s LF@i
            CONCAT GF@?tempDEST GF@?tempDEST GF@?tempSRC1
            ADD LF@i LF@i int@1
            JUMP $$$while
        
        LABEL $$$null
            PUSHS nil@nil
            JUMP $$$substring_end
        
        LABEL $$$substring_success
            PUSHS GF@?tempDEST
        
        LABEL $$$substring_end
        
        POPFRAME
        RETURN
        
        
        
    #-----------------------------------------
    #pub fn ifj.strcmp(s1: []u8, s2: []u8) i32
        LABEL $$ifj$strcmp
        PUSHFRAME
        
        STRLEN GF@?tempSRC1 LF@s1
        STRLEN GF@?tempSRC2 LF@s2
        DEFVAR LF@len
        MOVE LF@len GF@?tempSRC1
        
        LT GF@?tempDEST GF@?tempSRC1 GF@?tempSRC2
        JUMPIFEQ $$$cmp_def GF@?tempDEST bool@true
        
        MOVE LF@len GF@?tempSRC2
        
        LABEL $$$cmp_def
        DEFVAR LF@i
        MOVE LF@i int@0
        LABEL $$$cmp_while
        
            JUMPIFEQ $$$strcmp0 LF@i LF@len
            GETCHAR GF@?tempSRC1 LF@s1 LF@i
            GETCHAR GF@?tempSRC2 LF@s2 LF@i
            
            LT GF@?tempDEST GF@?tempSRC1 GF@?tempSRC2
            JUMPIFEQ $$$strcmp-1 GF@?tempDEST bool@true
            
            GT GF@?tempDEST GF@?tempSRC1 GF@?tempSRC2
            JUMPIFEQ $$$strcmp1 GF@?tempDEST bool@true
            
            ADD LF@i LF@i int@1
        
        JUMP $$$cmp_while
        
        LABEL $$$strcmp-1
            PUSHS int@-1
            JUMP $$$cmp_end
        
        LABEL $$$strcmp1
            PUSHS int@1
            JUMP $$$cmp_end
        
        LABEL $$$strcmp0
            PUSHS int@0
            JUMP $$$cmp_end
        
        LABEL $$$cmp_end
        
        POPFRAME
        RETURN
        
        
        
    #-----------------------------------------
    #pub fn ifj.ord(s: []u8, i: i32) i32
        LABEL $$ifj$ord
        PUSHFRAME
        
        STRLEN GF@?tempSRC1 LF@s
        EQ GF@?tempDEST GF@?tempSRC1 int@0
        JUMPIFEQ $$$ord_zero GF@?tempDEST bool@true
        
        LT GF@?tempDEST LF@i int@0
        JUMPIFEQ $$$ord_zero GF@?tempDEST bool@true
        EQ GF@?tempDEST LF@i GF@?tempSRC1
        JUMPIFEQ $$$ord_zero GF@?tempDEST bool@true
        GT GF@?tempDEST LF@i GF@?tempSRC1
        JUMPIFEQ $$$ord_zero GF@?tempDEST bool@true
        
        STRI2INT GF@?tempDEST LF@s LF@i
        PUSHS GF@?tempDEST
        JUMP $$$ord_end
        
        # Vrácení hodnoty 0
        LABEL $$$ord_zero
        PUSHS int@0
        
        LABEL $$$ord_end
        POPFRAME
        RETURN
        
        
        
LABEL $$main
PUSHFRAME
PUSHS string@Enter\032a\032string\058\032 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
DEFVAR LF@inputStr$1$ 
READ GF@?tempSRC1 string
PUSHS GF@?tempSRC1
POPS LF@inputStr$1$ 
# if_0
PUSHS LF@inputStr$1$
# then_0
POPS GF@?tempSRC1
JUMPIFEQ if_else$0 GF@?tempSRC1 nil@nil
DEFVAR LF@str$2$
MOVE LF@str$2$ GF@?tempSRC1
PUSHS string@You\032entered\032the\032string\058\032 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS LF@str$2$
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS string@\010 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
JUMP if_end$0
LABEL if_else$0
PUSHS string@Error\058\032Invalid\032string\032input\046\010 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
LABEL if_end$0
PUSHS string@Enter\032an\032integer\058\032 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
DEFVAR LF@inputInt$1$ 
READ GF@?tempSRC1 int
PUSHS GF@?tempSRC1
POPS LF@inputInt$1$ 
# if_1
PUSHS LF@inputInt$1$
# then_1
POPS GF@?tempSRC1
JUMPIFEQ if_else$1 GF@?tempSRC1 nil@nil
DEFVAR LF@intVal$4$
MOVE LF@intVal$4$ GF@?tempSRC1
PUSHS string@You\032entered\032the\032integer\058\032 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS LF@intVal$4$
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS string@\010 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
DEFVAR LF@intToFloat$4$ 
PUSHS LF@intVal$4$
INT2FLOATS
POPS LF@intToFloat$4$ 
PUSHS string@Converted\032integer\032to\032float\058\032 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS LF@intToFloat$4$
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS string@\010 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
JUMP if_end$1
LABEL if_else$1
PUSHS string@Error\058\032Invalid\032integer\032input\046\010 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
LABEL if_end$1
PUSHS string@Enter\032a\032floating\045point\032number\058\032 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
DEFVAR LF@inputFloat$1$ 
READ GF@?tempSRC1 float
PUSHS GF@?tempSRC1
POPS LF@inputFloat$1$ 
# if_2
PUSHS LF@inputFloat$1$
# then_2
POPS GF@?tempSRC1
JUMPIFEQ if_else$2 GF@?tempSRC1 nil@nil
DEFVAR LF@floatVal$6$
MOVE LF@floatVal$6$ GF@?tempSRC1
PUSHS string@You\032entered\032the\032float\058\032 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS LF@floatVal$6$
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS string@\010 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
DEFVAR LF@floatToInt$6$ 
PUSHS LF@floatVal$6$
FLOAT2INTS
POPS LF@floatToInt$6$ 
PUSHS string@Converted\032float\032to\032integer\058\032 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS LF@floatToInt$6$
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS string@\010 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
JUMP if_end$2
LABEL if_else$2
PUSHS string@Error\058\032Invalid\032floating\045point\032input\046\010 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
LABEL if_end$2
DEFVAR LF@str1$1$ 
PUSHS string@Hello 
POPS LF@str1$1$ 
DEFVAR LF@str2$1$ 
PUSHS string@\044\032World\033 
POPS LF@str2$1$ 
DEFVAR LF@concatenated$1$ 
PUSHS LF@str1$1$
PUSHS LF@str2$1$
POPS GF@?tempSRC2
POPS GF@?tempSRC1
CONCAT GF@?tempDEST GF@?tempSRC1 GF@?tempSRC2
PUSHS GF@?tempDEST
POPS LF@concatenated$1$ 
PUSHS string@Concatenated\032string\058\032 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS LF@concatenated$1$
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS string@\010 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS string@Length\032of\032concatenated\032string\058\032 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
DEFVAR LF@len$1$ 
PUSHS LF@concatenated$1$
POPS GF@?tempSRC1
STRLEN GF@?tempDEST GF@?tempSRC1
PUSHS GF@?tempDEST
POPS LF@len$1$ 
PUSHS LF@len$1$
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS string@\010 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
DEFVAR LF@subStr$1$ 
CREATEFRAME
PUSHS LF@concatenated$1$
DEFVAR TF@s
POPS TF@s
PUSHS int@0 
DEFVAR TF@i
POPS TF@i
PUSHS int@5 
DEFVAR TF@j
POPS TF@j
CALL $$ifj$substring
POPS LF@subStr$1$ 
# if_3
PUSHS LF@subStr$1$
# then_3
POPS GF@?tempSRC1
JUMPIFEQ if_else$3 GF@?tempSRC1 nil@nil
DEFVAR LF@sub$8$
MOVE LF@sub$8$ GF@?tempSRC1
PUSHS string@Substring\032\040first\0325\032chars\041\058\032 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS LF@sub$8$
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS string@\010 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
JUMP if_end$3
LABEL if_else$3
PUSHS string@Error\058\032Invalid\032substring\032operation\046\010 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
LABEL if_end$3
DEFVAR LF@comparisonResult$1$ 
CREATEFRAME
PUSHS LF@str1$1$
DEFVAR TF@s1
POPS TF@s1
PUSHS LF@str2$1$
DEFVAR TF@s2
POPS TF@s2
CALL $$ifj$strcmp
POPS LF@comparisonResult$1$ 
PUSHS string@String\032comparison\032result\032\040str1\032vs\032str2\041\058\032 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS LF@comparisonResult$1$
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS string@\010 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
DEFVAR LF@ordValue$1$ 
CREATEFRAME
PUSHS LF@concatenated$1$
DEFVAR TF@s
POPS TF@s
PUSHS int@1 
DEFVAR TF@i
POPS TF@i
CALL $$ifj$ord
POPS LF@ordValue$1$ 
PUSHS string@Ordinal\032value\032of\0322nd\032character\032in\032concatenated\032string\058\032 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS LF@ordValue$1$
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS string@\010 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
DEFVAR LF@charFromOrd$1$ 
PUSHS LF@ordValue$1$
INT2CHARS
POPS LF@charFromOrd$1$ 
PUSHS string@Character\032created\032from\032ordinal\032value\058\032 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS LF@charFromOrd$1$
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
PUSHS string@\010 
POPS GF@?tempSRC1
WRITE GF@?tempSRC1
POPFRAME
RETURN

LABEL $$end$$

